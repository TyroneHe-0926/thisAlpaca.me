{"version":3,"file":"ng2-animate-on-scroll.js","sources":["../../projects/ng2-animate-on-scroll/src/lib/scroll.service.ts","../../projects/ng2-animate-on-scroll/src/lib/animate-on-scroll.directive.ts","../../projects/ng2-animate-on-scroll/src/lib/animate-on-scroll.module.ts","../../../projects/ng2-animate-on-scroll/src/ng2-animate-on-scroll.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, Subscription, EMPTY, fromEvent } from 'rxjs';\n\n@Injectable()\nexport class ScrollService implements OnDestroy {\n\n  scrollObs: Observable<any>;\n  resizeObs: Observable<any>;\n  pos: number;\n  private scrollSub: Subscription = new Subscription();\n  private resizeSub: Subscription = new Subscription();\n\n  constructor() {\n\n    // set initial value\n    this.manageScrollPos();\n\n    // create observable that we can subscribe to from component or directive\n    this.scrollObs = typeof window !== 'undefined' ? fromEvent(window, 'scroll') : EMPTY;\n\n    // initiate subscription to update values\n    this.scrollSub = this.scrollObs\n      .subscribe(() => this.manageScrollPos());\n\n    // create observable for changes in screen size\n    this.resizeObs = typeof window !== 'undefined' ? fromEvent(window, 'resize') : EMPTY;\n\n    // initiate subscription to update values\n    this.resizeSub = this.resizeObs\n      .subscribe(() => this.manageScrollPos());\n\n  }\n\n\n  private manageScrollPos(): void {\n\n    // update service property\n    this.pos = typeof window !== 'undefined' ? window.pageYOffset : 0;\n\n  }\n\n  ngOnDestroy(): void {\n    this.scrollSub.unsubscribe();\n    this.resizeSub.unsubscribe();\n  }\n\n}\n","import { Directive, Input, Renderer2, ElementRef, OnInit, OnDestroy, AfterViewInit } from '@angular/core';\nimport { ScrollService } from './scroll.service';\nimport { Subscription } from 'rxjs';\n\n@Directive({\n  selector: '[animateOnScroll]'\n})\nexport class AnimateOnScrollDirective implements OnInit, OnDestroy, AfterViewInit {\n\n  private offsetTop: number;\n  private isVisible: boolean;\n  private winHeight: number;\n  private scrollSub: Subscription = new Subscription();\n  private resizeSub: Subscription = new Subscription();\n\n  private get id(): string {\n    return this.elementRef.nativeElement.id;\n  }\n\n  @Input() animationName: string | null; // use fadeIn as default if not specified, specify null for no animation\n  // Pixel offset from screen bottom to the animated element to determine the start of the animation\n  @Input() offset: number = 80; // for scroll Listener\n  @Input() useScroll?: boolean;\n  @Input() threshold ?: number; // for intersection observer only for the time being\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2, private scroll: ScrollService) { }\n\n  ngOnInit(): void {\n    if (!this.animationName) {\n      return;\n    }\n    // default visibility to false\n    this.isVisible = false;\n    this.useScroll = this.useScroll ? this.useScroll : ((this.useScroll === false) ? false : true);\n    this.threshold = this.threshold ? (this.threshold || 0.5) : 0.5;\n    // using intersecting observer by default, else fallback to scroll Listener\n    if ('IntersectionObserver' in window && this.useScroll) {\n      const options: IntersectionObserverInit = {\n        root: null,\n        threshold: this.threshold,\n        rootMargin: '0px'\n      };\n      const observer: IntersectionObserver = new IntersectionObserver((entries, _) => {\n        entries.forEach(entry => {\n          if (!entry.isIntersecting) {\n            return;\n          }\n          this.addAnimationClass();\n        });\n      }, options);\n      observer.observe(this.elementRef.nativeElement);\n      return;\n    }\n\n    // subscribe to scroll event using service\n    this.scrollSub = this.scroll.scrollObs\n      .subscribe(() => this.manageVisibility());\n\n    // subscribe to resize event using service so scrolling position is always accurate\n    this.resizeSub = this.scroll.resizeObs\n      .subscribe(() => this.manageVisibility());\n\n  }\n\n  ngAfterViewInit(): void {\n    // run visibility check initially in case the element is already visible in viewport\n    setTimeout(() => this.manageVisibility(), 1);\n  }\n\n  ngOnDestroy(): void {\n    this.scrollSub.unsubscribe();\n    this.resizeSub.unsubscribe();\n  }\n\n  /**\n   * check for visibility of element in viewport to add animation\n   *\n   * @returns void\n   */\n  private manageVisibility(): void {\n\n    if (this.isVisible) {\n      // Optimisation; nothing to do if class has already been applied\n      return;\n    }\n\n    // check for window height, may change with a window resize\n    this.getWinHeight();\n\n    // get vertical position for selected element\n    this.getOffsetTop();\n\n    // we should trigger the addition of the animation class a little after getting to the element\n    const scrollTrigger = this.offsetTop + this.offset - this.winHeight;\n\n    // using values updated in service\n    if (this.scroll.pos >= scrollTrigger) {\n      this.addAnimationClass();\n    }\n\n  }\n\n  /**\n   * utility function to mark element visible and add css class\n   *\n   * @returns void\n   */\n  private addAnimationClass(): void {\n    // stops execution if no class is provided\n    if (!this.animationName) {\n      return;\n    }\n\n    // mark this element visible, we won't remove the class after this\n    this.isVisible = true;\n\n    // use default for animate.css if no value provided\n    this.setClass(this.animationName);\n\n  }\n\n  /**\n   * utility function to add one or more css classes to element in DOM\n   *\n   * @param  {string} classes\n   * @returns void\n   */\n  private setClass(classes: string): void {\n\n    for (const c of classes.split(' ')) {\n      this.renderer.addClass(this.elementRef.nativeElement, c);\n    }\n\n  }\n\n  /**\n   * get window height utility function\n   *\n   * @returns void\n   */\n  private getWinHeight(): void {\n\n    this.winHeight = typeof window !== 'undefined' ?  window.innerHeight : 0;\n\n  }\n\n  /**\n   * get offsetTop value for element\n   *\n   * @returns void\n   */\n  private getOffsetTop(): void {\n    if (typeof this.elementRef.nativeElement.getBoundingClientRect === 'function') {\n      const viewportTop = this.elementRef.nativeElement.getBoundingClientRect().top;\n      const clientTop = this.elementRef.nativeElement.clientTop;\n\n      // get vertical position for selected element\n      this.offsetTop = viewportTop + this.scroll.pos - clientTop;\n    } else {\n      this.offsetTop = 0;\n    }\n\n  }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AnimateOnScrollDirective } from './animate-on-scroll.directive';\nimport { ScrollService } from './scroll.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    AnimateOnScrollDirective\n  ],\n  exports: [\n    AnimateOnScrollDirective\n  ]\n})\nexport class AnimateOnScrollModule {\n  static forRoot(): ModuleWithProviders<AnimateOnScrollModule> {\n    return {\n      ngModule: AnimateOnScrollModule,\n      providers: [ ScrollService ]\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}